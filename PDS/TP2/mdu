#include <dirent.h>
#include <errno.h>
#include <limits.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>


int du_file(const char *pathname) {

    struct stat st;
    int status, taille = 0;

    status = stat(pathname, &st);

    /* test d'erreur de stat */
    if (status == -1) {
        perror("Erreur stat");
        return EXIT_FAILURE;
    }

    /* Mise à jour de la taille du répertoire */
    taille += st.st_blocks;

    /* Dans le cas où le pathname mène à un répertoire */
    if (S_ISDIR(st.st_mode)) {
        char tmp[PATH_MAX + 1];
        DIR *dossier;
        struct direct *dir;

        dossier = opendir(pathname);

        /* Test d'erreur d'opendir */
        switch (errno) {

            case EACCES :
                printf("Accès interdit.");
        }
        if (dossier == -1) {
            perror("Erreur opendir");
            return EXIT_FAILURE;
        }

        while (dir=readdir(dossier) && !strcmp(".", pathname) && !strcmp("..", pathname)) {

            /* Test d'erreur de readdir */
            if (errno == EBADF) {
                printf("Le descripteur de flux du répertoire, dirp, n'est pas valable.");
                return EXIT_FAILURE;
            }

            snprintf(tmp, PATH_MAX + 1, "%s/%s", dir->d_name, pathname);
            taille += du_file(tmp);
        }

        return taille;
    }
}

int main(int argc, char *argv[]) {

    
}
